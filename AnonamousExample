interface Transaction {
    void deposit(double amt);
    void withdraw(double amt);
}

class AuditAccount {
    void auditTransaction() {
        // Create an anonymous inner class implementing the Transaction interface
        Transaction transaction = new Transaction() {
            double balance = 0;

            @Override
            public void deposit(double amt) {
                balance += amt;
                System.out.println("Deposit: " + amt);
            }

            @Override
            public void withdraw(double amt) {
                if (balance >= amt) {
                    balance -= amt;
                    System.out.println("Withdraw: " + amt);
                } else {
                    System.out.println("Insufficient balance.");
                }
            }
        };

        // Demonstrate the use of deposit() and withdraw() methods on the anonymous inner class
        transaction.deposit(1000);
        transaction.withdraw(500);
        transaction.withdraw(700);
    }
}

public class Main {
    public static void main(String[] args) {
        AuditAccount auditAccount = new AuditAccount();
        auditAccount.auditTransaction();
    }
}
